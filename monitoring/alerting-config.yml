# Alerting Configuration for Salary Management System
# This file defines monitoring rules and alert thresholds

global:
  smtp_smarthost: 'localhost:587'
  smtp_from: 'alerts@your-domain.com'
  smtp_auth_username: 'alerts@your-domain.com'
  smtp_auth_password: 'your-smtp-password'

route:
  group_by: ['alertname']
  group_wait: 10s
  group_interval: 10s
  repeat_interval: 1h
  receiver: 'web.hook'

receivers:
- name: 'web.hook'
  email_configs:
  - to: 'admin@your-domain.com'
    subject: '[ALERT] Salary Management System - {{ .GroupLabels.alertname }}'
    body: |
      {{ range .Alerts }}
      Alert: {{ .Annotations.summary }}
      Description: {{ .Annotations.description }}
      Instance: {{ .Labels.instance }}
      Severity: {{ .Labels.severity }}
      Time: {{ .StartsAt }}
      {{ end }}

inhibit_rules:
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'dev', 'instance']

# Alert Rules
groups:
- name: salary-management-system
  rules:
  
  # System Resource Alerts
  - alert: HighDiskUsage
    expr: (node_filesystem_avail_bytes / node_filesystem_size_bytes) * 100 < 20
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: "High disk usage detected"
      description: "Disk usage is above 80% on {{ $labels.instance }}"

  - alert: HighMemoryUsage
    expr: (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes) * 100 < 20
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: "High memory usage detected"
      description: "Memory usage is above 80% on {{ $labels.instance }}"

  - alert: HighCPUUsage
    expr: 100 - (avg by(instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: "High CPU usage detected"
      description: "CPU usage is above 80% on {{ $labels.instance }}"

  # Application Alerts
  - alert: ApplicationDown
    expr: up{job="salary-app"} == 0
    for: 1m
    labels:
      severity: critical
    annotations:
      summary: "Application is down"
      description: "The salary management application is not responding"

  - alert: DatabaseDown
    expr: up{job="mysql"} == 0
    for: 1m
    labels:
      severity: critical
    annotations:
      summary: "Database is down"
      description: "The MySQL database is not responding"

  - alert: RedisDown
    expr: up{job="redis"} == 0
    for: 1m
    labels:
      severity: critical
    annotations:
      summary: "Redis is down"
      description: "The Redis cache server is not responding"

  - alert: NginxDown
    expr: up{job="nginx"} == 0
    for: 1m
    labels:
      severity: critical
    annotations:
      summary: "Nginx is down"
      description: "The Nginx web server is not responding"

  # Performance Alerts
  - alert: HighResponseTime
    expr: http_request_duration_seconds{quantile="0.95"} > 2
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: "High response time detected"
      description: "95th percentile response time is above 2 seconds"

  - alert: HighErrorRate
    expr: rate(http_requests_total{status=~"5.."}[5m]) / rate(http_requests_total[5m]) > 0.05
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: "High error rate detected"
      description: "Error rate is above 5% for the last 5 minutes"

  # Database Alerts
  - alert: DatabaseConnectionsHigh
    expr: mysql_global_status_threads_connected / mysql_global_variables_max_connections > 0.8
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: "High database connections"
      description: "Database connections are above 80% of the maximum"

  - alert: DatabaseSlowQueries
    expr: rate(mysql_global_status_slow_queries[5m]) > 0.1
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: "High number of slow queries"
      description: "Slow query rate is above 0.1 queries per second"

  # Security Alerts
  - alert: FailedLoginAttempts
    expr: rate(failed_login_attempts_total[5m]) > 5
    for: 2m
    labels:
      severity: warning
    annotations:
      summary: "High number of failed login attempts"
      description: "Failed login attempts rate is above 5 per minute"

  - alert: SSLCertificateExpiring
    expr: ssl_certificate_expiry_days < 30
    for: 1h
    labels:
      severity: warning
    annotations:
      summary: "SSL certificate expiring soon"
      description: "SSL certificate will expire in less than 30 days"

  - alert: SSLCertificateExpired
    expr: ssl_certificate_expiry_days < 0
    for: 1m
    labels:
      severity: critical
    annotations:
      summary: "SSL certificate has expired"
      description: "SSL certificate has expired and needs immediate renewal"

  # Backup Alerts
  - alert: BackupFailed
    expr: time() - last_backup_timestamp > 86400
    for: 1h
    labels:
      severity: warning
    annotations:
      summary: "Backup has not run in 24 hours"
      description: "The last successful backup was more than 24 hours ago"

  # Container Alerts
  - alert: ContainerDown
    expr: up{job="docker"} == 0
    for: 1m
    labels:
      severity: critical
    annotations:
      summary: "Container is down"
      description: "Container {{ $labels.container_name }} is not running"

  - alert: ContainerHighMemory
    expr: container_memory_usage_bytes / container_spec_memory_limit_bytes > 0.9
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: "Container memory usage is high"
      description: "Container {{ $labels.container_name }} memory usage is above 90%"

  - alert: ContainerHighCPU
    expr: rate(container_cpu_usage_seconds_total[5m]) > 0.8
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: "Container CPU usage is high"
      description: "Container {{ $labels.container_name }} CPU usage is above 80%"