version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: salary-app
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
    networks:
      - salary-network
    depends_on:
      - db
      - redis

  webserver:
    image: nginx:alpine
    container_name: salary-nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - salary-network
    depends_on:
      - app

  db:
    image: mysql:8.0
    container_name: salary-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: salary_management
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: password
      MYSQL_USER: salary_user
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    ports:
      - "3306:3306"
    volumes:
      - ./docker/mysql:/docker-entrypoint-initdb.d
      - dbdata:/var/lib/mysql
    networks:
      - salary-network
    command: --default-authentication-plugin=mysql_native_password
      --innodb-buffer-pool-size=256M
      --innodb-log-file-size=64M
      --max-connections=200
      --query-cache-size=32M
      --query-cache-type=1

  redis:
    image: redis:7-alpine
    container_name: salary-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    networks:
      - salary-network
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: salary-phpmyadmin
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: root
    networks:
      - salary-network
    depends_on:
      - db

networks:
  salary-network:
    driver: bridge

volumes:
  dbdata:
    driver: local
  redisdata:
    driver: local
